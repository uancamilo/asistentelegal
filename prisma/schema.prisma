generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider        = "prisma-erd-generator"
  output          = "./erd/ERD.svg"
  format          = "svg"
  puppeteerConfig = "./puppeteer.config.json"
}

generator erd_mermaid {
  provider = "prisma-erd-generator"
  output   = "./erd/schema.md"
  format   = "mermaid"
}

enum Role {
  SUPER_ADMIN
  ADMIN
  EDITOR
  ACCOUNT_OWNER
  MEMBER
}

enum UserStatus {
  INVITED
  ACTIVE
  SUSPENDED
}

model Account {
  id        String   @id @default(cuid())
  name      String   @unique
  ownerId   String   @unique
  owner     User     @relation("AccountOwner", fields: [ownerId], references: [id], onDelete: Restrict)
  members   User[]   @relation("AccountMembers")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model User {
  id           String     @id @default(cuid())
  email        String     @unique
  passwordHash String
  firstName    String
  lastName     String
  role         Role
  status       UserStatus @default(ACTIVE)
  accountId    String?
  account      Account?   @relation("AccountMembers", fields: [accountId], references: [id], onDelete: Cascade)
  ownedAccount Account?   @relation("AccountOwner")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([role], name: "unique_super_admin")
  @@index([accountId])
  @@index([role])
  @@index([email])
}
